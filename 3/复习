

## vue第二天复习

--- v-model(如果checkbox,select多选是数组，提供一个value属性)
           (radio checkbox分组靠的是v-model)，checked，selected不           存在
--- 修饰符 .number .lazy
--- 按键修饰符  .enter.ctrl.keyCode
--- 事件
       -- @事件.stop  //阻止冒泡
            ```
                stopPropagation，cancelBuuble=true（阻止冒泡）
            ```
       -- @事件.capture  //捕获
            ```
                xxx.addEventListener('click',fn,true)；true是捕                             获，false冒泡（默认）
            ```
        -- @事件.prevent
            ```
                 preventDefault,returnValue=false(阻止默认事件)
            ```
        -- @事件.once//只执行一次
             ```
                on('click') off('click')
             ```
        -- @事件.self 判断事件源
             ```
                 e.srcElement&&e.target(判断事件源绑定事件)
             ```
### filters实例上可以用

    ```
        {{'123'  | my(1,2,3)}}
        filters:{
            my(data,param1,param2,param3){

            }

        }
    ```
### computed 计算“属性”，不是方法

---方法不会有缓存，computed会根据依赖（归vue管理的数据，可以响应式变化的）的属性进行缓存

---两部分组成：get(可以只写get)和set(不能只写set)，一般情况下，
            通过js赋值影响其他人或者表单元素设置值的时候会调用set方法

## v-if/v-show
--- v-if 操作的是dom，v-if 和 v-else-if，v-else 连写
--- v-show  操作的是样式


## v-bind简写：
--动态绑定“属性”
--<img :src="src" :width='w'/>

## 实现单页开发的方式
--通过hash记录跳转的路径（可以产生历史管理）
--浏览器自带的历史管理的方法history（history.pushState()）可能会导致404错误

>>>开发时使用hash的方式，上线的话我们会使用history的方式

const a={};a.name='li';这样是可以的，以为空间地址没有变
如果再次进行a={};这就不对了，这是重新赋值


### VUE绑定数据闪现问题
使用 v-cloak
   标签中直接使用v-cloak ，
   样式中添加
	[v-cloak] {
   	  display: none;
 	}
